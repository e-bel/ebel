[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ebel"
version = "1.0.37"
description = "e(BE:L) - validation and extension of BEL networks."
authors = [
    "Bruce Schultz <bruce.schultz@scai.fraunhofer.de>",
    "Christian Ebeling <christian.ebeling@scai.fraunhofer.de>",
]
maintainers = ["Christian Ebeling <christian.ebeling@scai.fraunhofer.de>"]
license = "MIT"
repository = "https://github.com/e-bel/ebel"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
keywords = ["Biomedical Database", "Biological Expression Lnaguage", "Graph Database"]
packages = [
    { include = "ebel" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.urls]
Issues = 'https://github.com/e-bel/ebel/issues'
Documentation = 'https://ebel.readthedocs.io/en/latest/'

[tool.poetry.dependencies]
lark-parser = "^0.11.3"
click = "^8.1.7"
requests = "^2.31.0"
tqdm = "^4.66.1"
pandas = "^1.5.3"
sqlalchemy = "^2.0.20"
SQLAlchemy-Utils = "^0.37.9"
xlwt = "^1.3.0"
xlrd = "^2.0.1"
xlsxwriter = "^1.4.5"
xmltodict = "^0.12.0"
GitPython = "^3.1.36"
lxml = "^4.9.3"
flask = "^2.2.5"
flask_cors = "^3.0.10"
connexion = {version = "^2.14.2", extras = ["swagger-ui"]}
cryptography = "^3.4.8"
openpyxl = "^3.1.2"
graphviz = "0.20"
pyorientdb = "^1.0.0"
PyMySQL = "^1.1.0"
python = "^3.9"
mkdocstrings = {version = "^0.18", extras = ["python"]}

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"

[tool.poetry.scripts]
ebel = "ebel.cli:main"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "sphinx-click", "sphinx-autodoc-typehints"]

[tool.black]
line-length = 119
target-version = ['py39', 'py310', 'py311']

[tool.coverage.run]
branch = true
source = ["ebel"]
omit = [
    # omit main
    "ebel/__main__.py",
    # omit CLI
    "ebel/cli.py",
    # omit tests and docs
    "tests/*",
    "docs/*",
    ]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.paths]
source = [
    "ebel/",
    ".tox/*/lib/python*/site-packages/ebel",
    ]

[tool.coverage.html]
directory = "coverage_html_report"